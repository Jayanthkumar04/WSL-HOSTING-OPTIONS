//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AddServiceClient.AddServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AddServiceReference.AdditionService")]
    public interface AdditionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AdditionService/AddServiceInt", ReplyAction="http://tempuri.org/AdditionService/AddServiceIntResponse")]
        int AddServiceInt(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AdditionService/AddServiceInt", ReplyAction="http://tempuri.org/AdditionService/AddServiceIntResponse")]
        System.Threading.Tasks.Task<int> AddServiceIntAsync(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AdditionService/AddServiceDouble", ReplyAction="http://tempuri.org/AdditionService/AddServiceDoubleResponse")]
        double AddServiceDouble(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AdditionService/AddServiceDouble", ReplyAction="http://tempuri.org/AdditionService/AddServiceDoubleResponse")]
        System.Threading.Tasks.Task<double> AddServiceDoubleAsync(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AdditionService/Division", ReplyAction="http://tempuri.org/AdditionService/DivisionResponse")]
        double Division(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AdditionService/Division", ReplyAction="http://tempuri.org/AdditionService/DivisionResponse")]
        System.Threading.Tasks.Task<double> DivisionAsync(int a, int b);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AdditionServiceChannel : AddServiceClient.AddServiceReference.AdditionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdditionServiceClient : System.ServiceModel.ClientBase<AddServiceClient.AddServiceReference.AdditionService>, AddServiceClient.AddServiceReference.AdditionService {
        
        public AdditionServiceClient() {
        }
        
        public AdditionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdditionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdditionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdditionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddServiceInt(int a, int b) {
            return base.Channel.AddServiceInt(a, b);
        }
        
        public System.Threading.Tasks.Task<int> AddServiceIntAsync(int a, int b) {
            return base.Channel.AddServiceIntAsync(a, b);
        }
        
        public double AddServiceDouble(double a, double b) {
            return base.Channel.AddServiceDouble(a, b);
        }
        
        public System.Threading.Tasks.Task<double> AddServiceDoubleAsync(double a, double b) {
            return base.Channel.AddServiceDoubleAsync(a, b);
        }
        
        public double Division(int a, int b) {
            return base.Channel.Division(a, b);
        }
        
        public System.Threading.Tasks.Task<double> DivisionAsync(int a, int b) {
            return base.Channel.DivisionAsync(a, b);
        }
    }
}
